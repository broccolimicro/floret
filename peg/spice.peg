spice = (__ | subckt | model | options | nodeset | ic)* (end_k __*)? "[\0]";
end_k ~= "\.end" | "\.END";

subckt = subckt_k _ name _ (name _)* __ (device | __)* ends_k __;
subckt_k ~= "\.subckt" | "\.SUBCKT";
ends_k ~= "\.ends" | "\.ENDS";

device = R | C | L | K | D | Q | J | V | E | F | G | H | M | X;
R = "[rR]" name _ node _ node _ value _ param* __;
C = "[cC]" name _ node _ node _ value _ param* __;
L = "[lL]" name _ node _ node _ value _ param* __;
K = "[kK]" name _ "[lL]" node _ "[lL]" node _ value _ param* __;
D = "[dD]" name _ node _ node _ node _ (value _ (value _)?)? param* __;
Q = "[qQ]" name _ node _ node _ node _ (node _)? node _ (value _ (value _)?)? param* __;
J = "[jJ]" name _ node _ node _ node _ node (value _ (value _)?)? param* __;
V = "[vV]" name _ node _ node _ (("dc" _|"DC" _)? value | ("ac" _|"AC" _) (value _ (value _)?)? | ("distof1"|"DISTOF1") (value _ (value _)?)? | ("distof2"|"DISTOF2") (value _ (value _)?)?);
I = "[iI]" name _ node _ node _ (("dc" _|"DC" _)? value | ("ac" _|"AC" _) (value _ (value _)?)? | ("distof1"|"DISTOF1") (value _ (value _)?)? | ("distof2"|"DISTOF2") (value _ (value _)?)?);
E = "[eE]" name _ node _ node _ node _ node _ value __;
F = "[fF]" name _ node _ node _ name _ value __;
G = "[gG]" name _ node _ node _ node _ node _ value __;
H = "[hH]" name _ node _ node _ name _ value __;
M = "[mM]" name _ node _ node _ node _ node _ name _ param* (value _)? param* __;
X = "[xX]" name _ (node _)* name _ param* __;

model = model_k _ name _ name _ param* __;
model_k ~= "\.model" | "\.MODEL";

options = options_k _ param* __;
options_k ~= "\.options" | "\.OPTIONS";

nodeset = nodeset_k _ initial* __;
nodeset_k ~= "\.nodeset" | "\.NODESET";

ic = ic_k _ initial* __;
ic_k ~= "\.ic" | "\.IC";

initial = measure _ ~"=" _ value _;
measure = "[vViI]" ~"\(" node ~"\)";
param = name _ ~"=" _ value _ (~"," _ value _)*;
node = integer | name;
name = ~"[#_a-zA-Z][_a-zA-Z0-9]*";
value = constant unit?;

unit = ~"[aAfFpPnNuUmMkKxXgG]";
constant = bool | text | real;
real = ~integer (~"\." ~integer)? (~"e" ~"-"? ~integer)?;
bool = ~"true" | ~"false";
integer = ~"[0-9]+";
text = ~"\"([^\"\\]|\\.)*\"";

_ ~= "[ \t]*";
__ ~= "[ \t]*" ("\*[^\n\r]*" | "") "[\n\r]+";

